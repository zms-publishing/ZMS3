ZMS: Simplified Content Modelling
=================================

ZMS (Python-based Content Management System for Science, Technology and Medicine) is a content management solution for the site-based e-publishing. A simple editing interface and flexible content model (multilingualism, metadata, content objects, XML import/export, workflow etc.) is designed for optimal productivity for web sites, documentation and educational content. 

Modularity of the ZMS components and approved production processes turn ZMS into an incomparably rapid tool. The underlying efficiency-oriented publication model is the result of many consulting projects in recent years by HOFFMANN+LIEBENBERG, Berlin.

http://www.zms-publishing.com

Installation (GNU/Linux, OSX/Darwin and Windows/MinGW)
------------------------------------------------------
    
**(1) Setup ZMS3 Environment**

    *NOTE*: See Prerequisites and notes below.
     
::

$ cd ~
$ virtualenv ZMS3
           
**(2) Install ZMS3 Product**

::     
   
$ ./ZMS3/bin/pip install ZMS3 --process-dependency-links

**(3) Create ZMS3 Instance**

::     

$ ./ZMS3/bin/mkzopeinstance --dir ZMS3/instance
$ ./ZMS3/instance/bin/zopectl start

    and finally initialize new instance

    |   http://localhost:8080/manage_addProduct/zms/manage_addzmsform
    |   (replace "localhost" with your system's IP address or domain name if no local installation) 
       
Changelog
---------

3.1.0 (2014-12-31)
******************

    * Removed dependencies on Python <2.7 and Zope <2.13
    * Updated to TinyMCE-4.1.5 and CKEditor-4.4.4
    * Improved integration of ACE Editor
    * Improved Metacmd-Manager
    * ...
    * `more in 3.1.0... <https://zmslabs.org/trac/log/ZMS/trunk?action=stop_on_copy&mode=stop_on_copy&rev=2884&stop_rev=2737&limit=200>`_

3.0.4 (2014-09-08)
******************

    * Fixed update procedure     
    * `more in 3.0.4... <https://zmslabs.org/trac/log/ZMS/trunk?action=stop_on_copy&mode=stop_on_copy&rev=2736&stop_rev=2725&limit=200>`_

3.0.3 (2014-08-31)
******************

    * Fixed Metacmd-Manager     
    * `more in 3.0.3... <https://zmslabs.org/trac/log/ZMS/trunk?action=stop_on_copy&mode=stop_on_copy&rev=2724&stop_rev=2719&limit=200>`_


3.0.2 (2014-08-27)
******************
   
    * Updated to bootstrap-3.2.0
    * Made object browser entry node depending on access rights on multisites
    * Added user role as zmi body element css class
    * Added support for $INSTANCE_HOME in mediadb-location
    * Added Metacmd-Provider
    * Fixed ZMSTable cellformat selection
    * `more in 3.0.2... <https://zmslabs.org/trac/log/ZMS/trunk?action=stop_on_copy&mode=stop_on_copy&rev=2718&stop_rev=2658&limit=200>`_

3.0.1 (2014-06-25)
******************
    
    * `more in 3.0.1... <https://zmslabs.org/trac/log/ZMS/trunk?action=stop_on_copy&mode=stop_on_copy&rev=2657&stop_rev=2479&limit=200>`_
       
    https://zmslabs.org/trac/log/ZMS/trunk/

Code
----

    https://zmslabs.org/trac/browser/ZMS/trunk/
    
Prerequisites
-------------

    |   The PyPA recommended tool for creating isolated Python environments:
    |   https://virtualenv.pypa.io/en/latest/installation.html

    |   The PyPA recommended tool for installing and managing Python packages:
    |   https://pip.pypa.io/en/latest/installing.html
    
    Update ``pip`` and ``virtualenv``:
    
    ::
    
    $ pip install -U pip
    $ pip install -U virtualenv
    
    Users of Microsoft Windows have to install a development environment. MinGW (Minimalist GNU for Windows, http://www.mingw.org) provides a complete Open Source programming tool set which is suitable (`more hints <http://www.zms-publishing.com/download/installation_windows/index_ger.html>`_).
    
    Apple OS X running updated Xcode command line tools causes compiler errors rather than warnings used until before (`more info <https://langui.sh/2014/03/10/wunused-command-line-argument-hard-error-in-future-is-a-harsh-mistress/>`_). As a workaround you can downgrade these errors to warnings again via:

    ::
       
    $ export ARCHFLAGS="-Wno-error=unused-command-line-argument-hard-error-in-future"

    If you get compilation errors like ``fatal error: Python.h: No such file or directory compilation terminated``, install development headers using your system's recommended package manager.
