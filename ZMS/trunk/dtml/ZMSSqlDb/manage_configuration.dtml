<dtml-try>
<dtml-var f_ZMSSqlDb_manage_configuration>
<dtml-except>
<dtml-var manage_page_header>
<title><dtml-var "getZMILangStr('TAB_CONFIGURATION')"> <dtml-var "display_type(REQUEST)"></title>
<script language="JavaScript">
<!--//

$().ready(function() {
  var els = $('input.autocomplete');
  els.attr( 'size', 12);
  els.css( {'width':'20em', 'background':'white url(<dtml-var MISC_ZMS>ico_autocomplete.gif) right bottom no-repeat'});
  for (var i = 0; i < els.length; i++) {
    var el = $(els[i]);
    var name = el.attr('name');
    var prefix = name.substr(0, "attr_".length+name.substr("attr_".length).indexOf("_"));
    var column_id = name;
    for (var j=0; j < 3; j++) {
      column_id = column_id.substr(column_id.indexOf('_')+1);
    }
    var select_tablename = prefix + '_tablename_' + column_id;
    el.autocomplete("ajaxGetAutocompleteColumns", {
      extraParams: {
        selectTable: select_tablename,
        tableName: function(event) {
          var tableName = '';
          var els = $('select[name^=attr_][name*=_tablename_]');
          for ( var i = 0; i < els.length; i++) {
            var el = $(els[i]);
            tableName += el.attr('name')+':'+el.val()+'|';
          }
          return tableName;
        }
      },
      width: el.css( "width"),
      selectFirst: false,
      cacheLength: 1
    });
    el.result(function(event, data, formatted) {
      if (data)
        $(this).parent().next().find("input").val(data[1]);
      });
  }
});

function onFormSubmit( fm) {
  var b = true;
  return b;
}

function onAttrTypeChange( el) {
  var column_id = $(el).attr('name').substr( "attr_type_".length);
  var column_type = $(el).val();
  $("tr[id^=tr_][id$=_"+column_id+"]").css({'visibility':'hidden','display':'none'});
  $("tr[id=tr_"+column_type+"_"+column_id+"]").css({'visibility':'visible','display':''});
}

function toggleElement( sender, id) {
  var speed = "normal";
  var img = $('#'+sender);
  var el = $('#'+id);
  if ( el.css("display").toLowerCase()=="none") {
    img.attr( { src: "<dtml-var MISC_ZMS>mi.gif", title: "-", alt: "-"});
    el.show(speed);
  }
  else {
    img.attr( { src: "<dtml-var MISC_ZMS>pl.gif", title: "+", alt: "+"});
    el.hide(speed);
  }
}

  /**
   *
   * @param el		Html-Form Element
   * @param key		Key (obj|attr)
   */
  function btnClick(el, key) {
    var fm = el.form;
    fm.elements['key'].value = key;
    self.btnClicked = el.value;
  }

// #############################################################################
// ### MULTIMULTISELECT
// #############################################################################
var mms_uid = 0;

function mms_add_row(el) {
  var el_tbody = $($(el).parents("tbody")[0]);
  var sender_tr = $($(el).parents("tr")[0]);
  var el_trs = el_tbody.children();
  var el_tr = $(el_trs[el_trs.length-2]);
  var new_tr = el_tr.clone();
  var el_inputs = $("textarea,input,select",new_tr);
  var sender_inputs = $("textarea,input,select",sender_tr);
  for ( var k = 0; k < el_inputs.length; k++) {
    var key = $(el_inputs[k]).attr( "name");
    var new_key = key.substring( 0, key.lastIndexOf('_')) + (mms_uid+el_trs.length) + key.substring( key.lastIndexOf('_'));
    $(el_inputs[k]).attr( "id", new_key);
    $(el_inputs[k]).attr( "name", new_key);
    if ( $(el_inputs[k]).attr( "type") == "checkbox") {
      $(el_inputs[k]).attr( "checked", $(sender_inputs[k]).attr( "checked"));
      $(sender_inputs[k]).attr( "checked", "checked");
    }
    else {
      $(el_inputs[k]).val( $(sender_inputs[k]).val( ));
      $(sender_inputs[k]).val( "");
    }
  }
  mms_uid += 1;
  new_tr.insertBefore( el_tr);
  new_tr.css('display','');
  mms_normalize_rows(el_tbody);
}

function mms_delete_row(el) {
  if (confirm("<dtml-var "getZMILangStr('MSG_CONFIRM_DELOBJ')">")) {
    var el_tbody = $($(el).parents("tbody")[0]);
    var el_tr = $($(el).parents("tr")[0]);
    el_tr.remove();
    mms_normalize_rows(el_tbody);
  }
}

function mms_move_row(el) {
  var el_tbody = $($(el).parents("tbody")[0]);
  var sender_tr = $($(el).parents("tr")[0]);
  var el_trs = el_tbody.children();
  var si = el.selectedIndex+1;
  if ( si > 1) {
    si += 1;
  }
  var el_tr = $(el_trs[si]);
  if ( sender_tr != el_tr) {
    sender_tr.insertBefore( el_tr);
  }
  mms_normalize_rows(el_tbody);
}

function mms_normalize_rows(el_tbody) {
  var el_selects = $("select.collectionBtn",el_tbody);
  for ( var k = 0; k < el_selects.length; k++) {
    for ( var l = 0; l < el_selects[k].length-1; l++) {
      el_selects[k].options[l] = null;
    }
    for ( var l = 0; l < el_selects.length-1; l++) {
      el_selects[k].options[l] = new Option( l+1, l+1);
    }
    if ( k < el_selects.length-1) {
      el_selects[k].selectedIndex = k;
    }
  }
}

//-->
</script>
</head>

<dtml-in "getEntities()" mapping sort=label>
 <dtml-let entity=sequence-item>
  <dtml-if "REQUEST.get('id','')==id">
   <dtml-call "REQUEST.set('additionalObjectPathElements',[
    {'href':url_append_params(URL,{'id':id}),'title':label},
    ])">
  </dtml-if>
 </dtml-let>
</dtml-in>

<dtml-var manage_tabs>

<form name="form0" action="manage_changeConfiguration" onsubmit="return onFormSubmit(this)" method="post" enctype="multipart/form-data">
<input type="hidden" name="key" value="">
<input type="hidden" name="lang" value="<dtml-var lang>">
<input type="hidden" name="preview" value="preview">

<table cellspacing="1" cellpadding="0" border="0" class="zmiNeutralColorStrong0" width="98%">
  <!-- Header -->
  <tr>
   <td colspan="4" style="width:100%"><dtml-var "f_headline(_,_,headline=getZMILangStr('TAB_EDIT'),extra='<a href='+QUOT+'sqlmodel.xml'+QUOT+' target='+QUOT+'_blank'+QUOT+'><img src='+QUOT+MISC_ZMS+'mime_type.text_xml.gif'+QUOT+' title='+QUOT+getZMILangStr('BTN_EXPORT')+' (XML)'+QUOT+' border='+QUOT+'1'+QUOT+' align='+QUOT+'absmiddle'+QUOT+'/></a>')"></td>
  </tr>

  <dtml-in "getEntities()" mapping sort=label>
   <dtml-let entity=sequence-item>
   <dtml-if "REQUEST.get('id','')==id">
     <!-- Headline -->
     <tr valign="top" class="zmiNeutralColorStrong0">
      <td class="form-label">&nbsp;<dtml-var "getZMILangStr('ATTR_ID')"></td>
      <td class="form-label"><dtml-var "getZMILangStr('ATTR_DISPLAY')"></td>
      <td class="form-label"><dtml-var "getZMILangStr('ATTR_TYPE')"></td>
      <td class="form-label">&nbsp;</td>
     </tr>

     <tr valign="top" class="zmiNeutralColorMedium0">
      <td class="form-element" style="width:102px !important"
       ><input type="hidden" name="id" value="<dtml-var id>"
       >&nbsp;<code><dtml-var id></code
      ></td>
      <td class="form-element" style="width:102px !important"
       ><input type="text" name="label" value="<dtml-var label>" size="12"
      ></td>
      <td class="form-element" style="width:102px !important"
       ><select class="form-element" name="type">
        <dtml-in "['table','intersection','hidden']"
         ><dtml-let objtype=sequence-item
          ><option value="<dtml-var objtype>"<dtml-if "objtype==type"> selected="selected"</dtml-if>><dtml-var objtype></option
         ></dtml-let
        ></dtml-in
       ></select>
      </td>
      <td style="width:*;text-align:right">
       <input class="ui-button ui-state-default ui-corner-all" name="btn" type="submit" value="<dtml-var "getZMILangStr('BTN_SAVE')" html_quote>"/>
       <input class="ui-button ui-state-default ui-corner-all" name="btn" type="submit" value="<dtml-var "getZMILangStr('BTN_BACK')" html_quote>"/>
      </td>
     </tr>
     
     <tr valign="top" class="zmiNeutralColorMedium0">
      <td colspan="4">
        <!-- -->
        <table cellpadding="1" cellspacing="1" border="0" width="100%"
        ><colgroup>
         <col width="110"/>
         <col width="*"/>
        </colgroup
        ><tr class="zmiNeutralColorLight0"
         ><td class="form-small">Interface</td
         ><td class="form-small"><textarea class="form-fixed" name="interface" cols="80" rows="1" title="Interface" wrap="virtual" style="width:98%;height:20px;background-color:#FFF;"><dtml-var "entity.get('interface','')" html_quote></textarea></td
        ></tr
        ><tr class="zmiNeutralColorLight0"
         ><td class="form-small">Filter</td
         ><td class="form-small"><textarea class="form-fixed" name="filter" cols="80" rows="1" title="Filter" wrap="virtual" style="width:98%;height:20px;background-color:#FFF;"><dtml-var "entity.get('filter','')" html_quote></textarea></td
        ></tr
        ><tr class="zmiNeutralColorLight0"
         ><td class="form-small">Access</td
         ><td class="form-small">




       <!-- BO Access -->
       <dtml-call "REQUEST.set('roleOptpl',[])"
       ><dtml-with "getDocumentElement()"
       ><dtml-in userdefined_roles
        ><dtml-let role=sequence-item role_str="'ROLE_%s'%role.upper()" role_lang_str="getZMILangStr(role_str)"
         ><dtml-unless "role in ['ZMSSubscriber','ZMSUserAdministrator']"
          ><dtml-if "role_str==role_lang_str"
           ><dtml-call "roleOptpl.append([role,role])"
          ><dtml-else
           ><dtml-call "roleOptpl.append([role,role_lang_str])"
          ></dtml-if
         ></dtml-unless
        ></dtml-let
       ></dtml-in
       ></dtml-with>
       <table cellspacing="1" cellpadding="2" border="0" width="100%">
       <tr class="zmiNeutralColorStrong0">
        <td><div class="form-small"><b><dtml-var "getZMILangStr('TAB_ACCESS')"></b></div></td>
        <dtml-in roleOptpl>
         <dtml-let roleId="_['sequence-item'][0]" roleName="_['sequence-item'][1]">
          <td align="center" class="form-small"><img src="<dtml-var MISC_ZMS>icon_roles.gif" title="<dtml-var "getZMILangStr('ATTR_ROLE')">" border="0" style="vertical-align:middle"/><dtml-var roleName></td>
         </dtml-let>
        </dtml-in>
       </tr>
       <dtml-if "entity.get('access') is None">
        <dtml-call "operator_setitem(entity,'access',{})">
       </dtml-if>
       <dtml-in "['insert','update','delete']">
        <dtml-let action=sequence-item>
         <tr valign="middle" class="zmiTableRowEven">
          <td><div class="form-small"><b><dtml-var "getZMILangStr('BTN_%s'%action.upper())"></b></div></td>
          <dtml-in roleOptpl>
           <dtml-let roleId="_['sequence-item'][0]" roleName="_['sequence-item'][1]">
            <dtml-try>
            <td align="center"><input type="checkbox" class="form-checkbox" name="access_<dtml-var action>:list" value="<dtml-var roleId>" <dtml-if "(entity.get('access',{}).get(action) is None) or (roleId in entity.get('access',{}).get(action,[]))">checked="checked"</dtml-if>></td>
            <dtml-except>
             <td align="center">
              <dtml-var error_type>: <dtml-var error_value><hr/>
              <dtml-var entity>
             </td>
            </dtml-try>
           </dtml-let>
          </dtml-in>
         </tr>
        </dtml-let>
       </dtml-in>
       </table>
      <!-- EO Access -->




         </td
        ></tr
        ></table>
        <!-- Headline -->
       <table cellspacing="1" cellpadding="0" border="0" class="zmiNeutralColorStrong0" width="100%">
       <tr valign="middle">
        <td class="form-small" colspan="2"><b>&nbsp;</b></td>
        <td class="form-small"><b><dtml-var "getZMILangStr('ATTR_ID')"></b></td>
        <td class="form-small"><b><dtml-var "getZMILangStr('ATTR_DESCRIPTION')"></b></td>
        <td class="form-small"><b><dtml-var "getZMILangStr('ATTR_DISPLAY')"></b></td>
        <td class="form-small" align="center"><img src="<dtml-var MISC_ZMS>table_col.gif" title="<dtml-var "getZMILangStr('ATTR_DISPLAY')"> (<dtml-var "getZMILangStr('ATTR_COL')">)" border="0" /></td>
        <td class="form-small">&nbsp;</td>
       </tr>
       <!-- Change / Delete Attributes -->
       <dtml-in columns mapping sort=index>
        <dtml-let column=sequence-item column_required="column.get('description','')!=''">
         <tr valign="top" 
          <dtml-if "REQUEST.form.get('attr_id','')==column['id']">
           class="zmiTeaserColor"
          <dtml-else>
           class="zmiNeutralColorMedium0"
          </dtml-if>>
          <td valign="top" class="zmiNeutralColorStrong0">
           <dtml-var "f_collectionBtn(_,_,url='manage_changeConfiguration?id=%s&attr_id=%s&key=attr'%(REQUEST['id'],column['id']),required=column_required)">
          </td>
          <td class="form-small" nowrap="nowrap">
          <img src="<dtml-var MISC_ZMS><dtml-if "column.get('type')!='?'">ico_attr.gif<dtml-else>ico_item.gif</dtml-if>" title="<dtml-var "column.get('type','?').capitalize()">" border="0" style="vertical-align:middle" />
           <dtml-if pk><img src="<dtml-var MISC_ZMS>btn_key.gif" alt="" border="0" align="middle" /><span style="color:blue;"></dtml-if>
          </td>
          <td class="form-small"
            ><input type="hidden" name="attr_ids:list" value="<dtml-var "column['id']">"
            ><input type="hidden" name="attr_index_<dtml-var "column['id']">" value="<dtml-var sequence-index>"
           ><dtml-if column_required
            ><code><dtml-var "column['id']"></code
           ><dtml-else
            ><input type="text" name="attr_id_<dtml-var "column['id']">" value="<dtml-var "column['id']">" size="12"
           ></dtml-if
          ></td>
          <td class="form-small">
           <code><dtml-var "column.get('description','')"></code> 
           <dtml-if "column.get('type') is not None and column.get('type')!='?'"><b>(<dtml-var "column.get('type')">)</b></dtml-if>
          </td>
          <td class="form-small"
           ><input type="text" name="attr_label_<dtml-var "column['id']">" value="<dtml-var "column['label']">" size="12"
          ></td>
          <td title="<dtml-var "getZMILangStr('ATTR_DISPLAY')">" align="center"
           ><dtml-var "getCheckbox(fmName='form0',elName='attr_display_%s:int'%column['id'],value=int(column.get('hide',0)==0),enabled=_.True,REQUEST=REQUEST)"
          ></td>
          <td class="form-small"
           ><select class="form-small" name="attr_type_<dtml-var "column['id']">" onchange="onAttrTypeChange(this)"
            ><option value=""></option
            ><dtml-in "valid_types.keys()" sort
             ><dtml-let t=sequence-item
              ><option value="<dtml-var t>"<dtml-if "column.has_key(t)"> selected="selected"</dtml-if>><dtml-var t></option
             ></dtml-let
            ></dtml-in
           ></select
           ><table cellpadding="1" cellspacing="1" border="0" width="100%"
           ><colgroup>
            <col width="20%"/>
            <col width="80%"/>
           </colgroup
           ><dtml-let blob="column.get('blob',{})" style="int(not column.has_key('blob'))*'style=\042display:none;\042'"
            ><tr id="tr_blob_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Type</td
             ><td class="form-small"><select name="attr_blob_type_<dtml-var "column['id']">"><dtml-in "['file','image']"><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "blob.get('type')==t"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select></td
            ></tr
            ><tr id="tr_blob_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Path</td
             ><td class="form-small"><input type="text" name="attr_blob_path_<dtml-var "column['id']">" value="<dtml-var "blob.get('path','')">" size="12"></td
            ></tr
            ><tr id="tr_blob_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Remote [URL]</td
             ><td class="form-small"><input type="text" name="attr_blob_remote_<dtml-var "column['id']">" value="<dtml-var "blob.get('remote','')">" size="12"></td
            ></tr
           ></dtml-let
           ><dtml-let details="column.get('details',{})" style="int(not column.has_key('details'))*'style=\042display:none;\042'"
            ><tr id="tr_details_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Tablename</td
             ><td class="form-small"><dtml-try><select name="attr_details_tablename_<dtml-var "column['id']">"><dtml-in "map( lambda x: x['id'], getEntities())" sort><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "str(details.get('tablename','')).upper()==t.upper()"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select><dtml-except><dtml-var error_type>: <dtml-var error_value></dtml-try></td
            ></tr
            ><tr id="tr_details_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Foreign Key</td
             ><td class="form-small"><input type="text" name="attr_details_fk_<dtml-var "column['id']">" class="autocomplete" value="<dtml-var "details.get('fk','')">"></td
            ></tr
           ></dtml-let
           ><dtml-let fk="column.get('fk',{})" style="int(not column.has_key('fk'))*'style=\042display:none;\042'"
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Tablename</td
             ><td class="form-small"><dtml-try><select name="attr_fk_tablename_<dtml-var "column['id']">"><option value=""></option><dtml-in "map( lambda x: x['id'], getEntities())" sort><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "str(fk.get('tablename','')).upper()==t.upper()"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select><dtml-except><dtml-var error_type>: <dtml-var error_value></dtml-try></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Fieldname</td
             ><td class="form-small"><input type="text" name="attr_fk_fieldname_<dtml-var "column['id']">" class="autocomplete" value="<dtml-var "fk.get('fieldname','')">"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Displayfield</td
             ><td class="form-small"><input type="text" name="attr_fk_displayfield_<dtml-var "column['id']">" class="autocomplete" value="<dtml-var "fk.get('displayfield','')">"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Maxlen</td
             ><td class="form-small"><input type="text" name="attr_fk_maxlen_<dtml-var "column['id']">" value="<dtml-var "fk.get('maxlen','25')">" size="6"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Editable</td
             ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_fk_editable_%s:int'%column['id'],value=int(fk.get('editable',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Lazy</td
             ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_fk_lazy_%s:int'%column['id'],value=int(fk.get('lazy',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">B.MySQL-Set</td
             ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_fk_mysqlset_%s:int'%column['id'],value=int(fk.get('mysqlset',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
            ></tr
            ><tr id="tr_fk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">C.Options</td
             ><td class="form-small"><textarea class="form-fixed" name="attr_fk_options_<dtml-var "column['id']">" cols="80" rows="1" title="Options" wrap="virtual" style="width:90%;height:20px;background-color:#FFF;"><dtml-in "fk.get('options',[])"><dtml-let x=sequence-item><dtml-var "'%s->%s\n'%(str(x[0]),str(x[1]))"></dtml-let></dtml-in></textarea></td
            ></tr
            ></dtml-let
           ><dtml-let multiselect="column.get('multiselect',{})" style="int(not column.has_key('multiselect'))*'style=\042display:none;\042'"
            ><tr id="tr_multiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Tablename</td
             ><td class="form-small"><dtml-try><select name="attr_multiselect_tablename_<dtml-var "column['id']">"><option value=""></option><dtml-in "map( lambda x: x['id'], getEntities())" sort><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "str(multiselect.get('tablename','')).upper()==t.upper()"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select><dtml-except><dtml-var error_type>: <dtml-var error_value></dtml-try></td
            ></tr
            ><tr id="tr_multiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Foreign Key</td
             ><td class="form-small"><input type="text" name="attr_multiselect_fk_<dtml-var "column['id']">" class="autocomplete" value="<dtml-var "multiselect.get('fk','')">"></td
            ></tr
            ><tr id="tr_multiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">A.Lazy</td
             ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_multiselect_lazy_%s:int'%column['id'],value=int(multiselect.get('lazy',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
            ></tr
            ><tr id="tr_multiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">B.MySQL-Set</td
             ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_multiselect_mysqlset_%s:int'%column['id'],value=int(multiselect.get('mysqlset',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
            ></tr
           ></dtml-let
           ><dtml-let multimultiselect="column.get('multimultiselect',{})" style="int(not column.has_key('multimultiselect'))*'style=\042display:none;\042'"
            ><tr id="tr_multimultiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Foreign Key</td
             ><td class="form-small"><input type="text" name="attr_multimultiselect_fk_<dtml-var "column['id']">" value="<dtml-var "multimultiselect.get('fk','')">" size="12"></td
            ></tr
            ><tr id="tr_multimultiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Tablename</td
             ><td class="form-small"><dtml-try><select name="attr_multimultiselect_tablename_<dtml-var "column['id']">" size="12"><option value=""></option><dtml-in "map( lambda x: x['id'], getEntities())" sort><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "str(multimultiselect.get('tablename','')).upper()==t.upper()"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select><dtml-except><dtml-var error_type>: <dtml-var error_value></dtml-try></td
            ></tr
            ><tr id="tr_multimultiselect_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" colspan="2"
              ><div class="form-small">Tables</div
              ><table cellpadding="0" cellspacing="0" border="0" width="100%"
              ><tr
               ><td class="form-small">&nbsp;</td
               ><td class="form-small">FK</td
               ><td class="form-small">Tablename</td
               ><td class="form-small">Fieldname</td
               ><td class="form-small">Displayfield</td
               ><td class="form-small">Label</td
               ><td class="form-small">Lazy</td
               ><td class="form-small" align="center"><img src="<dtml-var MISC_ZMS>table_col.gif" title="<dtml-var "getZMILangStr('ATTR_DISPLAY')"> (<dtml-var "getZMILangStr('ATTR_COL')">)" border="0" /></td
              ></tr
              ><dtml-in "multimultiselect.get('tables',[])+[{}]"
               ><dtml-let sx=sequence-index si=sequence-item
                ><tr <dtml-unless "si.keys()">style="display:none;"</dtml-unless>
                 ><td align="right" class="zmiNeutralColorStrong0" nowrap="nowrap"
                  ><select name="attr_multimultiselect_tables_index_<dtml-var sx>_<dtml-var "column['id']">" class="form-small collectionBtn" onchange="mms_move_row(this)"
                   ><dtml-in "multimultiselect.get('tables',[])">><dtml-let ssx=sequence-index><option value="<dtml-var "ssx+1">"<dtml-if "ssx==sx"> selected="selected"</dtml-if>><dtml-var "ssx+1"></option></dtml-let></dtml-in
                  ></select
                  ><a href="#" class="button"><img src="<dtml-var MISC_ZMS>btn_trashcan1.gif" title="<dtml-var "getZMILangStr('BTN_DELETE')">" border="0"  onclick="mms_delete_row(this)" class="button"/></a
                 ></td
                 ><td class="form-small"><input class="form-small" type="text" name="attr_multimultiselect_tables_fk_<dtml-var sx>_<dtml-var "column['id']">" value="<dtml-var "si.get('fk','')">" size="5"></td
                 ><td class="form-small"><input class="form-small" type="text" name="attr_multimultiselect_tables_tablename_<dtml-var sx>_<dtml-var "column['id']">" value="<dtml-var "si.get('tablename','')">" size="5"></td
                 ><td class="form-small"><input class="form-small" type="text" name="attr_multimultiselect_tables_fieldname_<dtml-var sx>_<dtml-var "column['id']">" value="<dtml-var "si.get('fieldname','')">" size="5"></td
                 ><td class="form-small"><input class="form-small" type="text" name="attr_multimultiselect_tables_displayfield_<dtml-var sx>_<dtml-var "column['id']">" value="<dtml-var "si.get('displayfield','')">" size="5"></td
                 ><td class="form-small"><input class="form-small" type="text" name="attr_multimultiselect_tables_label_<dtml-var sx>_<dtml-var "column['id']">" value="<dtml-var "si.get('label','')">" size="5"></td
                 ><td class="form-small"><dtml-var "getCheckbox(fmName='form0',elName='attr_multimultiselect_tables_lazy_%i_%s:int'%(sx,column['id']),value=int(si.get('lazy',0)==1),enabled=_.True,REQUEST=REQUEST)"></td
                 ><td align="center" title="<dtml-var "getZMILangStr('ATTR_DISPLAY')"> (<dtml-var "getZMILangStr('ATTR_COL')">)"
                  ><input class="form-checkbox" type="checkbox" name="attr_multimultiselect_tables_display_<dtml-var sx>_<dtml-var "column['id']">:int" value="1" <dtml-unless "si.get('hide')">checked="checked"</dtml-unless>
                 ></td
                ></tr
               ></dtml-let
              ></dtml-in
              ><tr id="tr_multimultiselect_<dtml-var "column['id']">" <dtml-var style>
               ><td align="right" class="zmiNeutralColorStrong0"
                ><select style="display:none;"></select
                ><a href="#" class="button"><img src="<dtml-var MISC_ZMS>btn_add.gif" title="<dtml-var "getZMILangStr('CAPTION_INSERT')%getZMILangStr('ATTR_ATTR')">" border="0"  onclick="mms_add_row(this)" class="button" /></a
               ></td
               ><td class="form-small"><input class="form-small" type="text" name="mms_new_fk" value="" size="5"></td
               ><td class="form-small"><input class="form-small" type="text" name="mms_new_tablename" value="" size="5"></td
               ><td class="form-small"><input class="form-small" type="text" name="mms_new_fieldname" value="" size="5"></td
               ><td class="form-small"><input class="form-small" type="text" name="mms_new_displayfield" value="" size="5"></td
               ><td class="form-small"><input class="form-small" type="text" name="mms_new_label" value="" size="5"></td
               ><td align="center" title="<dtml-var "getZMILangStr('ATTR_DISPLAY')"> (<dtml-var "getZMILangStr('ATTR_COL')">)"
                ><input class="form-checkbox" type="checkbox" name="mms_new_display:int" value="1" checked="checked"
               ></td
              ></tr
              ></table
             ></td
            ></tr
           ></dtml-let
           ><dtml-let pk="column.get('pk',{})" style="int(not column.has_key('pk'))*'style=\042display:none;\042'"
            ><tr id="tr_pk_<dtml-var "column['id']">" class="zmiNeutralColorLight0" <dtml-var style>
             ><td class="form-small" nowrap="nowrap">Auto</td
             ><td class="form-small"><dtml-try><select name="attr_auto_<dtml-var "column['id']">"><option value=""></option><dtml-in "['db','insert','update']" sort><dtml-let t=sequence-item><option value="<dtml-var t>"<dtml-if "str(column.get('auto','')).upper()==t.upper()"> selected="selected"</dtml-if>><dtml-var t></option></dtml-let></dtml-in></select><dtml-except><dtml-var error_type>: <dtml-var error_value></dtml-try></td
            ></tr
           ></dtml-let
           ></table
          ></td>
         </tr>
        </dtml-let>
       </dtml-in>

       <!-- Insert Attribute -->
       <tr valign="middle">
        <td align="right" class="zmiNeutralColorStrong0"><img src="<dtml-var MISC_ZMS>btn_add.gif" title="<dtml-var "getZMILangStr('CAPTION_INSERT')%getZMILangStr('ATTR_ATTR')">" border="0" class="button" /></td>
        <td class="zmiNeutralColorStrong0"><img src="<dtml-var spacer_gif>" border="0" width="16" height="16" style="vertical-align:middle" /></td>
        <td class="form-small" style="vertical-align:middle" ><input class="form-small" type="text" name="attr_id" value="" size="12" /></td>
        <td class="form-small">&nbsp;</td>
        <td class="form-small" style="vertical-align:middle"><input class="form-small" type="text" name="attr_label" value="" size="12" /></td>
        <td style="text-align:center;vertical-align:middle" 
            title="<dtml-var "getZMILangStr('ATTR_DISPLAY')"> (<dtml-var "getZMILangStr('ATTR_COL')">)"><input class="form-checkbox" type="checkbox" name="attr_display:int" value="1" checked="checked" /></td>
        <td nowrap="nowrap"
         ><select class="form-small" name="attr_type" 
          ><option value="">----- <dtml-var "getZMILangStr('ACTION_SELECT')%getZMILangStr('ATTR_TYPE')"> -----</option
          ><dtml-in "valid_types.keys()"
           ><dtml-let t=sequence-item
            ><option value="<dtml-var t>"><dtml-var t></option
           ></dtml-let
          ></dtml-in
         ></select
         >&nbsp;&nbsp;&nbsp;<input class="form-small" name="btn" type="submit" value="<dtml-var "getZMILangStr('BTN_INSERT')" html_quote>" onclick="btnClick(this,'attr');">
        </td>
       </tr>

       </table>
      </td>
     </tr>

   <dtml-elif "REQUEST.get('id','')==''">
    <tr valign="top" class="neutralColorWhite">
     <td>
      <div class="form-small"<dtml-if "entity.get('not_found')"> style="color:red;"</dtml-if>>
       <a href="javascript:toggleElement('img_<dtml-var id>','columns_<dtml-var id>')"><img id="img_<dtml-var id>" src="<dtml-var MISC_ZMS>pl.gif" alt="+" title="+" border="0" align="absmiddle"/></a>
       <a href="javascript:toggleElement('none_<dtml-var id>','sql_<dtml-var id>')"><img src="<dtml-var MISC_ZMS>btn_custom.gif" alt="SQL" title="+" border="0" align="absmiddle"/></a>
       <a id="a_<dtml-var id>" href="?lang=<dtml-var lang>&id=<dtml-var id>" class="zmi"<dtml-if "entity.get('not_found')"> style="color:red;"</dtml-if>><strong><dtml-var id></strong>:<dtml-var type> (<em><dtml-var label></em>)</a>
       <div id="columns_<dtml-var id>" style="display:none;padding-left:20px;">
        <dtml-in columns mapping>
         <dtml-let column=sequence-item>
         <div class="form-small"<dtml-if "column.get('not_found')"> style="color:red;"</dtml-if>>
          <img src="<dtml-var MISC_ZMS><dtml-if "column.get('type')!='?'">ico_attr.gif<dtml-else>ico_item.gif</dtml-if>" title="<dtml-var "column.get('type','?').capitalize()">" border="0" style="vertical-align:middle" />
          <dtml-if pk><img src="<dtml-var MISC_ZMS>btn_key.gif" alt="" border="0" align="middle" /></dtml-if>
          <code><dtml-var id> <dtml-var "column.get('description','')"></code> 
          <dtml-if "column.get('type') is not None and column.get('type')!='?'"><b>(<dtml-var "column.get('type')">)</b></dtml-if>
          <dtml-if stereotypes><dtml-in stereotypes>&gt;<dtml-var sequence-item></dtml-in></dtml-if>
          (<em><dtml-var label><dtml-if mandatory><dtml-var FORM_LABEL_MANDATORY></dtml-if></em>)
         </div>
         </dtml-let>
        </dtml-in>
       </div>
       <div id="sql_<dtml-var id>" style="display:none;padding-left:20px;" class="form-fixed">
        CREATE TABLE <dtml-var id> (<br/>
        <dtml-in "_.filter( lambda x: x.has_key('description'), columns)" mapping>
         <dtml-let column=sequence-item>
          <dtml-if description>
           <dtml-unless sequence-start>,</dtml-unless> <dtml-var id> <dtml-var description><br/>
          </dtml-if>
         </dtml-let>
        </dtml-in>
        )
       </div>
      </div>
     </td>
    </tr>
   </dtml-if>
   </dtml-let>
  </dtml-in>

<dtml-comment>
################################################################################
### Import
################################################################################
</dtml-comment>
 <dtml-if "REQUEST.get('id','')==''">
  <tr>
   <td><dtml-var "f_headline(_,_,headline='<img src=%smime_type.text_xml.gif alt=XML border=0 align=absmiddle>&nbsp;%s'%(MISC_ZMS,getZMILangStr('BTN_IMPORT')))"></td>
  </tr>
  <tr class="zmiNeutralColorLight0">
   <td>
    <table cellspacing="0" cellpadding="2" border="0">
    <tr valign="middle">
     <td align="right"><div class="form-label"><img src="<dtml-var MISC_ZMS>upload.gif" title="XML" border="0" style="vertical-align:middle" /><dtml-var "getZMILangStr('ATTR_FILE')"></div></td>
     <td><input class="form-element" name="file" type="file" size="25" accept="text/xml"></td>
    </tr>
    <tr>
     <td>&nbsp;</td>
     <td><input class="ui-button ui-state-default ui-corner-all" name="btn" type="submit" value="<dtml-var "getZMILangStr('BTN_IMPORT')" html_quote>" onclick="btnClick(this,'obj');"></td>
    </tr>
    </table>
   </td>
  </tr>
</dtml-if
></table
></form
><br/>

<dtml-var manage_page_footer>
</dtml-try>
