<dtml-call "REQUEST.RESPONSE.setHeader('Cache-Control','public, max-age=3600')">
<dtml-call "REQUEST.RESPONSE.setHeader('Content-Type', 'text/javascript; charset=utf-8')">

/**
 * Returns language.
 */
function getZMILang() {
  return '<dtml-var lang>';
}


// ############################################################################
// ### getZMILangStr:
// ############################################################################
function getZMILangStr(key) {
	var langDict = {
		<dtml-in "['BTN_UPLOAD','BTN_CANCEL','MSG_CONFIRM_DELOBJ','LOCALE']"><dtml-let si=sequence-item>
'<dtml-var si>':'<dtml-var "getZMILangStr(si)">'<dtml-unless sequence-end>,</dtml-unless>
</dtml-let></dtml-in>
	};
	var langStr = langDict[key];
	if (typeof langStr == 'string') {
		return langStr;
	}
	return key;
}


// ############################################################################
// ### getConfFiles:
// ############################################################################

var zmiExpandConfFilesProgress = false;

function zmiExpandConfFiles(el, pattern) {
  if (!zmiExpandConfFilesProgress) {
    if ( el.options.length <=1) {
      zmiExpandConfFilesProgress = true;
      // Set wait-cursor.
      $(document.body).css( "cursor", "wait");
      // JQuery.AJAX.get
      $.get( 'getConfFiles',
          {id:el.id,pattern:pattern},
          function(data) {
            // Reset wait-cursor.
            $(document.body).css( "cursor", "auto");
            //
            var select = document.getElementById('init');
            var items = $("item",data);
            for (var i = 0; i < items.length; i++) 
            {
              var item = $(items[i]);
              var value = item.attr("key");
              var label = item.text();
              var option = new Option( label, value);
              select.options[ select.length] = option;
            }
            select.selectedIndex = 0;
            zmiExpandConfFilesProgress = false;
          });
    }
  }
}


// ############################################################################
// ### browseEnumBtnClick:
// ############################################################################
function browseEnumBtnClick(fmName, elName, enumName)
{
  var title = "<dtml-var "url_quote(getZMILangStr('CAPTION_CHOOSEOBJ'))">";
  var url = "browse_enum";
  var elValue = "";
  if (fmName.length > 0 && elName.length > 0)
  {
    elValue = document.forms[fmName].elements[elName].value;
  }
  params = '?lang=<dtml-var lang>';
  params += '&amp;fmName=' + escape(fmName);
  params += '&amp;elName=' + escape(elName);
  params += '&amp;elValue=' + escape(elValue);
  params += '&amp;enum=' + escape(enumName);
  open_function(url+params,400,50,",resizable=yes,scrollbars=yes");
  return false;
}

/**
 * collectionPositionPopulate
 *
 * @param el
 * @param len
 * @see f_collectionbtn.dtml
 */
function collectionPositionPopulate(el, len) {
  if ( el.options.length == 1) {
    selectedValue = el.options[0].text;
    el.options.length = 0;
    for (var i = 0; i < len; i++) {
      var value = ''+(i+1);
      addOption( el, value, value, selectedValue);
    }
  }
}

/**
 * collectionDeleteBtnOnClick
 *
 * @param href
 * @see f_collectionbtn.dtml
 */
function collectionDeleteBtnOnClick(href)
{
  confirmDeleteBtnOnClick(href + '&amp;btn=delete');
}

/**
 * Confirm delete.
 *
 * @param href
 */
function confirmDeleteBtnOnClick(href)
{
  if (confirm("<dtml-var "getZMILangStr('MSG_CONFIRM_DELOBJ')">")) {
    if (href.indexOf('lang=<dtml-var lang>') < 0) {
      href += '&amp;lang=<dtml-var lang>';
    }
    location.href = href;
  }
}

// ############################################################################
// ### confirmChanges()
// ############################################################################
function confirmChanges(el)
{
  if (el && self.name == 'cameFromForm') {
    el.target = '_parent';
  }
  if (navigator.platform.indexOf("Mac")<0) {
    var anyFormModified = false;
    for (i=0; i<document.forms.length; i++) {
      anyFormModified |= isFormModified(document.forms[i]);
    }
    if ( anyFormModified)
      if (!confirm("<dtml-var "getZMILangStr('MSG_CONFIRM_DISCARD_CHANGES')">"))
        return false;
  }
  return true;
}
