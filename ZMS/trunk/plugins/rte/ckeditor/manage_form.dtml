<dtml-comment>
################################################################################
###  CKEditor
###  please refer to http://ckeditor.com/
###  Important Note: The folder "lang" in the original distribution has been
###  renamed into "lingua" and all references to the path "lang/" changed into
###  "lingua/" due to Zope restrictions on subfolders named "lang".
###
###  Conf-Properties:
###  plugin.rte.ckeditor.Height=400
###  plugin.rte.ckeditor.FormatTags=p;h1;h2;h3;pre;address;div
###  plugin.rte.ckeditor.Config
################################################################################
</dtml-comment>

<dtml-unless "REQUEST.get('f_zmiRichtextOnSubmitEventHandler')">

<!-- 
Fix for can't edit fields of CKEditor in jQuery UI modal dialog
@see http://forum.jquery.com/topic/can-t-edit-fields-of-ckeditor-in-jquery-ui-modal-dialog 
-->
<style>
.cke_skin_kama .cke_dialog_body { z-index: inherit; }
</style>

<script type="text/javascript">

 var zmiRichtextElNames = new Array();
 <dtml-call "REQUEST.set('count',0)"
 ><dtml-in "getObjAttrs(REQUEST.get('ZMS_INSERT',meta_id)).keys()"
  ><dtml-let key=sequence-item obj_attr="getObjAttr(key,REQUEST.get('ZMS_INSERT',meta_id))"
   ><dtml-if "obj_attr.get('type',None)=='richtext'"
    >zmiRichtextElNames[<dtml-var count>]='<dtml-var "getObjAttrName(obj_attr,lang)">';<dtml-call "REQUEST.set('count',count+1)"
    ></dtml-if>
   </dtml-let
 ></dtml-in
 ><dtml-if "count==0"
  >zmiRichtextElNames[<dtml-var count>]='<dtml-var "REQUEST.get('elName')">';<dtml-call "REQUEST.set('count',count+1)"
 ></dtml-if>

function zmiStandardOnSubmitEventHandler() {
	for (e in zmiRichtextElNames) {
		var elName = zmiRichtextElNames[e];
		var el = document.getElementById('zmiStandardEditor'+elName);
		if ( el != null && el.style.display != 'none' && el.style.visibility != 'hidden') {
			try {
				var data = $('#'+elName).val();
				CKEDITOR.instances['editor_'+elName].setData( data);
			}
			catch(er) {
			}
		}
	}
}

<dtml-call "REQUEST.set('beforeSubmitBtnClick','zmiRichtextOnSubmitEventHandler(); ')">
function zmiRichtextOnSubmitEventHandler() {
	for (e in zmiRichtextElNames) {
		var elName = zmiRichtextElNames[e];
		var el = document.getElementById('zmiRichtextEditor'+elName);
		if ( el != null && el.style.display != 'none' && el.style.visibility != 'hidden') {
			try {
				// Get value from editor.
				var data = CKEDITOR.instances['editor_'+elName].getData();
				// Relativate urls.
				data = zmiRelativateUrls(data,'<dtml-var "getVersionContainer().absolute_url()">');
				// Assign value to textarea.
				$('#'+elName).val( data);
			}
			catch(er) {
				$('#'+elName).val( $('#alternate_'+elName).val());
			}
		}
	}
}

</script>
<dtml-call "REQUEST.set('f_zmiRichtextOnSubmitEventHandler',True)">
</dtml-unless>

<textarea id="editor_<dtml-var "REQUEST.get('elName')">" name="editor_<dtml-var "REQUEST.get('elName')">"></textarea>

<script type="text/javascript">

var CKEDITOR_BASEPATH = '/++resource++zms_/ckeditor/';
var CKEDITOR_LOADED = {};

function pluginCkeditor(s, c) {
	$.plugin('ckeditor',{
			cache: false,
			files: ['/++resource++zms_/ckeditor/ckeditor.js']
		});
	$.plugin('ckeditor').get(s,c);
}

function loadCkeditor(id, opt) {
	var instance = CKEDITOR.instances[id];
	if(instance){
		instance.destroy();
	}
	CKEDITOR.replace(id, opt);
}

function zmiRichtextResize(id) {
	var instance = CKEDITOR.instances['editor_'+id];
	if(instance){
		var newHeight = $("div#zmiRichtextEditor"+id).height()-100;
		zmiWriteDebug("ckeditor.manage_form.zmiRichtextResize(): "+newHeight+"["+$(".cke_contents").length+"]");
		$(".cke_contents").css("height",newHeight);
	}
}

function zmiRichtextInit(id) {
	pluginCkeditor('#editor_'+id,function() {
		CKEDITOR.config.height = <dtml-var "getConfProperty('plugin.rte.ckeditor.Height',400)">;
		CKEDITOR.config.language = '<dtml-var "['EN','DE'][lang=='ger']">';
		CKEDITOR.config.format_tags = '<dtml-var "getConfProperty('plugin.rte.ckeditor.FormatTags','p;h1;h2;h3;pre;address;div')">';

////////////////////////////////////////////////////////////////////////////////
// Contents-CSS
////////////////////////////////////////////////////////////////////////////////
CKEDITOR.config.contentsCss = [];
$("link[rel=stylesheet]").each(function() {
		CKEDITOR.config.contentsCss.push($(this).attr("href"));
	});
CKEDITOR.config.contentsCss.push('/++resource++zms_/ckeditor/contents.css');
<dtml-in "REQUEST.get('CKEDITOR_config_contentsCss',[])">
CKEDITOR.config.contentsCss.push('<dtml-var sequence-item>');
</dtml-in>

////////////////////////////////////////////////////////////////////////////////
// Import XStandard styles
////////////////////////////////////////////////////////////////////////////////
<dtml-if "'xstandard_styles' in getAbsoluteHome().objectIds() and REQUEST.get('ZMS_THIS').getParentNode() is not None">
CKEDITOR.config.format_tags = '';
<dtml-let xml_styles="xmlParse(getXmlHeader()+xstandard_styles(_,_,meta_id=REQUEST.get('ZMS_INSERT',REQUEST.get('ZMS_THIS').getParentNode().meta_id)))">
<dtml-in "xmlNodeSet(xml_styles,'style')">
<dtml-let xml_style=sequence-item
><dtml-call "REQUEST.set('style_id',None)"><dtml-in "xmlNodeSet(xml_style,'id')"><dtml-let node=sequence-item><dtml-if sequence-start><dtml-call "REQUEST.set('style_id',id_quote(node['cdata']))"></dtml-if></dtml-let></dtml-in
><dtml-call "REQUEST.set('style_name',None)"><dtml-in "xmlNodeSet(xml_style,'name')"><dtml-let node=sequence-item><dtml-if sequence-start><dtml-call "REQUEST.set('style_name',node['cdata'])"></dtml-if></dtml-let></dtml-in
><dtml-call "REQUEST.set('style_elt',None)"><dtml-in "xmlNodeSet(xml_style,'elt')"><dtml-let node=sequence-item><dtml-if sequence-start><dtml-call "REQUEST.set('style_element',node['cdata'])"></dtml-if></dtml-let></dtml-in
><dtml-call "REQUEST.set('style_attrs',[])"
><dtml-in "xmlNodeSet(xml_style,'attr')"
	><dtml-let node=sequence-item
		><dtml-in "xmlNodeSet(node,'name')"
			><dtml-let nodeName=sequence-item
				><dtml-call "REQUEST.set('style_attrs_nodeName',nodeName['cdata'])"
			></dtml-let
		></dtml-in
		><dtml-in "xmlNodeSet(node,'value')"
			><dtml-let nodeValue=sequence-item
				><dtml-call "REQUEST.set('style_attrs_nodeValue',nodeValue['cdata'])"
			></dtml-let
		></dtml-in
		><dtml-call "style_attrs.append((style_attrs_nodeName,style_attrs_nodeValue))"
	></dtml-let
></dtml-in
>
CKEDITOR.config.format_tags += (CKEDITOR.config.format_tags.length==0?'':';')+'<dtml-var style_id>';
CKEDITOR.config.format_<dtml-var style_id> = { name : '<dtml-var style_name>', element : '<dtml-var style_element>' , attributes : { <dtml-var "' , '.join(map(lambda x: '\'%s\' : \'%s\''%x, style_attrs))"> } };
</dtml-let
></dtml-in
></dtml-let
></dtml-if
>
////////////////////////////////////////////////////////////////////////////////

<dtml-if "REQUEST.get('CKEDITOR_config_toolbar')">
// Toolbar
CKEDITOR.config.toolbar_ZMSConfigToolbar = <dtml-var "str_json(REQUEST.get('CKEDITOR_config_toolbar'))">;
</dtml-if>

		loadCkeditor( 'editor_'+id, {
			<dtml-if "getConfProperty('plugin.rte.ckeditor.Config','')">
				customConfig : '<dtml-var "getHome().absolute_url()">/<dtml-var "getConfProperty('plugin.rte.ckeditor.Config','')">',
				toolbar: 'ZMSCustomToolbar',
			<dtml-elif "REQUEST.get('CKEDITOR_config_toolbar')">
				toolbar: 'ZMSConfigToolbar',
			<dtml-else>
				toolbar: 'ZMSBasicToolbar',
			</dtml-if>
			on:{
				instanceReady: function(ev) {
						zmiRichtextResize(id);
					}
				}
			});
		zmiRichtextSyncDataToView(id);
	})
}

function zmiRichtextSyncDataToView(id) {
	$( '#editor_'+id).val( $('#'+id).val());
	$( '#editor_'+id).prop('defaultValue',$( '#editor_'+id).val());
	var instance = CKEDITOR.instances['editor_'+id];
	if(instance){
		instance.setData($('#'+id).val());
	}
}

$(function() {
	zmiRichtextInit('<dtml-var "REQUEST.get('elName')">');
});

</script>
